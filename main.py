import telebot
import requests
from bs4 import BeautifulSoup
import re
import flask
from threading import Thread

# –ü—Ä—è–º–æ–π —Ç–æ–∫–µ–Ω
BOT_TOKEN = "8041110005:AAEyH4yY9ubOW8Wi4GUruoWsKrlVNMK_gqo"
SITE_LOGIN = "skolaotzyv@gmail.com"
SITE_PASSWORD = "ufZ-kJK-r5Z-bNW"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)

# –°–æ–∑–¥–∞–µ–º Flask app –¥–ª—è webhooks
app = flask.Flask(__name__)

SESSION = requests.Session()
HEADERS = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
}
SESSION.headers.update(HEADERS)

LOGIN_DATA = {
    'login': SITE_LOGIN,
    'password': SITE_PASSWORD
}

def auth():
    try:
        login_url = "https://oge.sdamgia.ru/profile"
        auth_response = SESSION.post(login_url, data=LOGIN_DATA, headers=HEADERS)
        
        if auth_response.status_code == 200:
            profile_check = SESSION.get("https://oge.sdamgia.ru/profile", headers=HEADERS)
            if "–≤–æ–π—Ç–∏" in profile_check.text.lower():
                return False
            return True
        return False
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return False

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "üîê –ü—ã—Ç–∞—é—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è...")
    if auth():
        bot.send_message(message.chat.id, "‚úÖ –ë–æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω! –û—Ç–ø—Ä–∞–≤–ª—è–π —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–µ—Å—Ç —Å –†–µ—à—É –û–ì–≠")
    else:
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")

@bot.message_handler(func=lambda message: True)
def solve_test(message):
    try:
        url = message.text.strip()
        
        if not url.startswith('http'):
            bot.send_message(message.chat.id, "‚ùå –û—Ç–ø—Ä–∞–≤—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–µ—Å—Ç")
            return
        
        bot.send_message(message.chat.id, "‚è≥ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–µ—Å—Ç...")
        
        response = SESSION.get(url, headers=HEADERS)
        soup = BeautifulSoup(response.content, 'html.parser')
        
        questions = soup.find_all('div', class_='question')
        
        if not questions:
            questions = soup.find_all('div', id=re.compile(r'question|task|problem'))
        
        if not questions:
            bot.send_message(message.chat.id, "‚ùå –ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –≤–æ–ø—Ä–æ—Å—ã. –ü—Ä–æ–≤–µ—Ä—å —Å—Å—ã–ª–∫—É")
            return
        
        answers = []
        for i, question in enumerate(questions):
            correct_answer = question.find('div', class_='right-answer')
            if correct_answer:
                answers.append(f"–í–æ–ø—Ä–æ—Å {i+1}: {correct_answer.text.strip()}")
            else:
                answer_input = question.find('input', {'checked': True})
                if answer_input:
                    answers.append(f"–í–æ–ø—Ä–æ—Å {i+1}: {answer_input.find_next('label').text.strip()}")
                else:
                    answers.append(f"–í–æ–ø—Ä–æ—Å {i+1}: –û—Ç–≤–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        result = "\n".join(answers)
        
        if len(result) > 4000:
            parts = [result[i:i+4000] for i in range(0, len(result), 4000)]
            for part in parts:
                bot.send_message(message.chat.id, part)
        else:
            bot.send_message(message.chat.id, f"üìä –ù–∞–π–¥–µ–Ω–æ –æ—Ç–≤–µ—Ç–æ–≤: {len(questions)}\n\n{result}")
    
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

# Webhook route –¥–ª—è Render
@app.route('/')
def index():
    return "ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

@app.route('/webhook/' + BOT_TOKEN, methods=['POST'])
def webhook():
    if flask.request.headers.get('content-type') == 'application/json':
        json_string = flask.request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return ''
    else:
        flask.abort(403)

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
def run_bot():
    print("üîÑ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    try:
        # –£–¥–∞–ª—è–µ–º webhook —á—Ç–æ–±—ã –æ—á–∏—Å—Ç–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ instances
        bot.remove_webhook()
        bot.polling(none_stop=True, timeout=60)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ polling: {e}")

if __name__ == "__main__":
    print("üöÄ Starting server...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    bot_thread = Thread(target=run_bot)
    bot_thread.daemon = True
    bot_thread.start()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask app
    app.run(host='0.0.0.0', port=10000, debug=False)
